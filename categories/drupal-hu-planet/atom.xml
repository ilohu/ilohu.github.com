<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Drupal.hu planet | Drupal kattintgatás nélkül]]></title>
  <link href="http://ilo.hu/categories/drupal-hu-planet/atom.xml" rel="self"/>
  <link href="http://ilo.hu/"/>
  <updated>2012-11-08T20:02:35+01:00</updated>
  <id>http://ilo.hu/</id>
  <author>
    <name><![CDATA[York]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Drupal modul készítése egyszerű]]></title>
    <link href="http://ilo.hu/drupal-modul-keszitese-egyszeru/"/>
    <updated>2010-08-30T11:47:00+02:00</updated>
    <id>http://ilo.hu/drupal-modul-keszitese-egyszeru</id>
    <content type="html"><![CDATA[<p>A minap azt javasoltam a <a href="http://drupal.hu">drupal.hu</a> fórumán egy kérdezőnek, hogy amit meg akar valósítani azt ne a smink rétegbe tegye hanem írjon rá egy modult, remélem megfogadta a tanacsom. Ezt a kijelentésemet a minap <a href="http://drupal.hu/tagok/aboros">aboros</a> vágta a fejemhez. Ezért úgy döntöttem, hogy bemutatom mennyire nehéz dolog egy drupal modult elkészíteni.
Az angol nyelvű modul fejlesztési dokumentációt itt találjátok: <a href="http://drupal.org/developing/modules">http://drupal.org/developing/modules</a>
A modul készítésről itt írnak: <a href="http://drupal.org/node/231276">http://drupal.org/node/231276</a>.</p>

<!-- more -->


<p>Egy oldal elkészítése során sok apró csiszolást kell elvégezni, hogy a drupal pont úgy működjön ahogy azt szeretnénk.
Ezeket a módosításokat célszerű egy a honlap nevével fémjelzet modulba tenni.
A most következő példában egy ilyen modul elkészítését mutatom meg a mysite nevű modult fogjuk elkészíteni, és a modul minden oldal letöltéskor egy üzenetet fog megjeleníteni.</p>

<p>A drupalban a modulok neve csak olyan karaktereket tartalmazhat, ami egy PHP függvény nevében is megadható, mivel a modul neve minden modulban létrehozott függvény nevében szerepelni fog.</p>

<p>A feltelepített drupal sites/all/modules alkönyvtárába hozzuk létre a mysite könyvtárat.
<code>bash
cd /var/www/drupal/
mkdir -p sites/all/modules/mysite
</code></p>

<p>A modul létrehozásához minimum két állomány szükséges egy mysite.info és egy mysite.module, ha szeretnénk a modul telepítésekor műveleteket végezni, akkor szükségünk lesz egy mysite.install állományra is (nekünk most nem kell).
Létrehozzuk mindegyik állományt. Kezdjük a mysite.info állománnyal, ennek a tartalma a következő legyen:
<code>bash
name = mysite
description = A mysite oldalon végzett módosításokat tartalmazza.
core = 7.x
</code>
A name a modul neve, a description a modul leírását tartalmazza, ezeket az értékeket kötelező megadni, de az info állományba megadhatunk még modul függőséget php és drupal verziót, az alábbi oldalon megtaláljuk a többi lehetőséget is: <a href="http://drupal.org/node/231036">http://drupal.org/node/231036</a>
A core opció a drupal verziót határozza meg, ha 6-os drupalhoz készítjük a 7.x-et 6.x-re cseréljük.</p>

<p>Az info állomány elkészítése után a mysite.module állományunkat kell elkészíteni.
Az állomány tartalma legyen a következő:
```php
&lt;?php
/<em>*
 * hook_init() implementálása
 </em>/
function mysite_init() {</p>

<pre><code>drupal_set_message(t('New message'));
</code></pre>

<p>}
```</p>

<p>A module állományban a <a href="http://api.drupal.org/api/function/hook_init/6">hook_init</a> hurkot implementáltuk. A szöveg kiíratására pedig a <a href="http://api.drupal.org/api/function/drupal_set_message/6">drupal_set_message()</a> függvény segítségével történt. A <a href="http://api.drupal.org/api/function/t/6">t()</a> függvény fordítja le a szöveget az oldal nyelvére.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Állomány feltöltés saját formon]]></title>
    <link href="http://ilo.hu/allomany-feltoltes-sajat-formon/"/>
    <updated>2009-12-21T19:18:38+01:00</updated>
    <id>http://ilo.hu/allomany-feltoltes-sajat-formon</id>
    <content type="html"><![CDATA[<p>A minap a webform2pdf drupal 6-os modulom drupal 5-ös átiratát készítettem, amikor belefutottam az állomány feltöltés problémájába, hogy is kell állományt feltölteni drupal 5-tel?
Az ötös Drupal kimaradt az életemből, így nem sok tapasztalatom van vele, valahogy úgy alakult, hogy a 4.7.x után nekem a 6-os Drupal jött.
Következzen akkor egy kis leírás arról, hogy töltünk fel állományt <a href="#drupal_5">drupal 5</a>-tel, majd nézzük meg, hogy változott meg ez <a href="#drupal_6">drupal 6</a>-ra.</p>

<!-- more -->


<h2><a name="drupal_5">Drupal 5</a></h2>

<p>Form függvényünkben most csak egy állományt fogunk feltölteni:
```phpinline
function mymodule_upload_form() {
  // Ezt a sort ne felejtsük el megadni, mert ennek hiányában nem töltődik fel az állomány
  $form['#attributes'] = array(</p>

<pre><code>'enctype' =&gt; "multipart/form-data"
</code></pre>

<p>  );</p>

<p>  $form['file_upload'] = array(</p>

<pre><code>'#type' =&gt; 'file',
'#title' =&gt; t('Filename'),
</code></pre>

<p>  );</p>

<p>  $form['submit'] = array(</p>

<pre><code>'#type' =&gt; 'submit',
'#value' =&gt; t('Upload file'),
</code></pre>

<p>  );</p>

<p>  return $form;
}
```</p>

<p>Tároljuk le a feltöltött állományt a form submit kampójában (hook):
```phpinline
function mymodule_upload_form_submit($form_id, $form_values) {
  // Itt ellenőrizzük le, hogy sikeres volt-e a feltöltés<br/>
  $file = file_check_upload('file_upload');
  if ($file){</p>

<pre><code>// Ha sikeres volt elmentjük az állományt a megadott könyvtárba
$file = file_save_upload($file, 'cél_könyvtár_útvonala');
</code></pre>

<p>  }
}
```</p>

<p>Eddig sétagalopp, a neheze akkor jön amikor valamilyen feltételnek megfelelő állományt szeretnénk, ha feltöltene a felhasználó. A példában várjunk egy képet, ami nem nagyobb mint 100x100 pixel, ha nagyobb méretezzük át.</p>

<p>A validációban megvizsgáljuk, hogy kép típusú-e az állomány, az átméretezést pedig megcsináljuk a sumbitkor.</p>

<p>A form előállítása változatlan. Az feltöltött állomány vizsgálatát a form validate függvényben végezzük el. A submit függvényben a képet átméretezzük, ha nagyobb mint a megengedett, majd elmentjük a megadott könyvtárba.
Validate függvény:
```phpinline
function mymodule_upload_form_validate($form_id, $form_values) {
  // Itt ellenőrizzük le, hogy sikeres volt-e a feltöltés<br/>
  $file = file_check_upload('file_upload');</p>

<p>  // Létezik-e a feltöltött állomány
  if ( isset($file->filepath) ) {</p>

<pre><code>// Megnézzük, hogy kép-e
$info = image_get_info($file-&gt;filepath);
if (!$info || !$info['extension']) {
  form_set_error('file_upload', t('The uploaded file was not an image.'));
}
</code></pre>

<p>}
<code>
Submit függvény:
</code>phpinline
function mymodule_upload_form_submit($form_id, $form_values) {
  // Ellenőrizzük le, hogy sikeres volt-e a feltöltés<br/>
  $file = file_check_upload('file_upload');</p>

<p>  // Létezik-e a feltöltött állomány
  if ( isset($file->filepath) ) {</p>

<pre><code>// Kép méret ellenőrzése
list($maxwidth, $maxheight) = explode('x', '100x100');
if ($info['width'] &gt; $maxwidth || $info['height'] &gt; $maxheight) {
  // Átméretezés
  image_scale($file-&gt;filepath, $file-&gt;filepath, $maxwidth, $maxheight);
  // Informáljuk a felhasználót az eseményről.
  drupal_set_message(t('The image was resized to fit within the maximum allowed dimensions of %dimensions pixels.', array('%dimensions' =&gt; '100x100'));
}

// Állomány elmentése a megadott helyre.
$file = file_save_upload($file, 'cél_könyvtár_útvonala');
</code></pre>

<p>  }
}
```</p>

<p>Aki ismeri a drupal 6 állomány kezelését az tudja, hogy ott már adatbázisban tárolja le az állományok adatait. Adatbázis drupal 5-ben is rendelkezésre áll csak kicsit más a szerkezete, és picit más célokra szolgál. Mi magunk is írhatunk az adatbázisba, ha szeretnénk ott is tárolni az állományaink adatait. Arra azonban figyeljünk, hogy az ötös verzióban magunknak kell gondoskodni az állományok törléséről mind a lemezről mind az adatbázisból (ha használjuk).</p>

<p>Nézzük, hogy kell állományt feltölteni drupal 6 alatt.</p>

<h2><a name="drupal_6">Drupal 6</a></h2>

<p>Hozzuk létre a form függvényünket a következő kép:
```phpinline
function mymodule_upload_form() {
  // Ezt a sort ne felejtsük el megadni, mert ennek hiányában nem töltődik fel az állomány
  $form['#attributes'] = array(</p>

<pre><code>'enctype' =&gt; "multipart/form-data"
</code></pre>

<p>  );</p>

<p>  $form['file_upload'] = array(</p>

<pre><code>'#type' =&gt; 'file',
'#title' =&gt; t('Filename'),
</code></pre>

<p>  );</p>

<p>  $form['submit'] = array(</p>

<pre><code>'#type' =&gt; 'submit',
'#value' =&gt; t('Upload file'),
</code></pre>

<p>  );</p>

<p>  return $form;
}
```</p>

<p>Tároljuk le a feltöltött állományt a form submit kampójában (hook):
```phpinline
function mymodule_upload_form_submit($form_id, $form_values) {
  //Állomány feltöltése
  if ( $file = file_save_upload('file_upload', array(), 'cél_könyvtár_útvonala' ) ) {</p>

<pre><code>//Státusz beállítása véglegesre, ha nem tesszük meg akkor egy idő után törli a drupal az állományunk.
file_set_status($file, FILE_STATUS_PERMANENT);
</code></pre>

<p>  }
}
```</p>

<p>Készítsük el a fenti példa drupal 6-os változatát. A feladat várjunk egy képet, ami nem nagyobb mint 100x100 pixel, ha nagyobb méretezzük át.
Ebben az esetben nem kell validate függvényt írnunk, mert egy lépésben megtehetjük a submit részben.
```phpinline
function mymodule_upload_form_submit($form_id, $form_values) {
  //Az feltöltött állomány validációs feltételei.
  $validators = array(</p>

<pre><code>'file_validate_is_image' =&gt; array(),
'file_validate_image_resolution' =&gt; array('100x100'),
</code></pre>

<p>  );</p>

<p>  //Állomány feltöltése, validációval
  if ( $file = file_save_upload('file_upload', $validators, 'cél_könyvtár_útvonala' ) ) {</p>

<pre><code>//Státusz beállítása véglegesre, ha nem tesszük meg akkor egy idő után törli a drupal az állományunk.
file_set_status($file, FILE_STATUS_PERMANENT);
</code></pre>

<p>  }
}
```</p>

<p>A <a href="http://api.drupal.org/api/function/file_save_upload">file_save_upload</a> függvényről az <a href="http://api.drupal.org">http://api.drupal.org</a> oldalon van részletesebb leírás.</p>

<p>Felhasznált források:</p>

<ul>
<li><a href="http://www.computerminds.co.uk/example-code-build-upload-form-drupal">http://www.computerminds.co.uk/example-code-build-upload-form-drupal</a></li>
<li><a href="http://groups.drupal.org/node/4308">http://groups.drupal.org/node/4308</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
